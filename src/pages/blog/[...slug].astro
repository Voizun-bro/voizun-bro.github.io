---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
// build時にそのまま使うとエラーになるため修正
type MarkdownHtml = (text: string, options?: MarkdownOptions) => string
type MarkdownHtmlAtBuild = { default: MarkdownHtml }

let markdownHtml: MarkdownHtml = lib

if(typeof lib !== 'function') {
  markdownHtml = (lib as MarkdownHtmlAtBuild).default
}
import 'zenn-content-css';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const content = markdownHtml(post.body, {
  embedOrigin: "https://embed.zenn.studio",
});

---

<head>
  <!-- Astroのscript最適化処理をキャンセルするためにis:inlineを追加 -->
  <script is:inline src="https://embed.zenn.studio/js/listen-embed-event.js"
  ></script>
</head>
<BlogPost {...post.data}>
  <div class="znc">
    <Fragment set:html={content} />
  </div>  
</BlogPost>
